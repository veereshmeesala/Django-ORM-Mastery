name: Django-ORM-Mastery

services:
  postgres:
    image: postgres:17.4-alpine3.21
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"

  django:
    build: .
    container_name: django_app
    restart: always
    depends_on:
      - postgres
    volumes:
      - ./app:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    command: >
      sh -c "
        if python manage.py shell -c 'from django.contrib.auth.models import User; print(User.objects.filter(username=\"admin\").exists())' | grep -q 'True'; then
          echo 'Admin user exists, skipping app and database setup';
        else
          echo 'Setting up database and creating admin user' &&
          rm -f inventory/migrations/0001_initial.py &&
          python manage.py migrate &&
          python manage.py makemigrations &&
          python manage.py migrate inventory &&
          python manage.py shell -c 'from django.contrib.auth.models import User; User.objects.create_superuser(\"admin\", \"admin@example.com\", \"admin\")';
        fi &&
        echo 'Cleaning and collecting static files' &&
        rm -rf static &&
        python manage.py collectstatic --noinput &&
        uvicorn core.asgi:application --host 0.0.0.0 --port 8000 --reload
      "